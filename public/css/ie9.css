#footer>.inner section,.tiles article{float:left}.tiles:after{content:'';display:block;clear:both}.tiles article>a{padding-top:50%;margin-top:-1.75em}body:not(.is-touch) .tiles article:hover>.image{-moz-transform:none;-webkit-transform:none;-ms-transform:none;transform:none}#footer>.inner .copyright{clear:both;padding-top:4em}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImllOS5zY3NzIiwibGlicy9fc2tlbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdDTSx1QkFuQkwsZUE4QkcsTUFBTyxLQTlCVixhQUVFLFFBQVMsR0FDVCxRQUFTLE1BQ1QsTUFBTyxLQUpULGlCQVdHLFlBQWEsSUFDYixXQUFZLFFBQ1osZ0RDa2hCTyxlQUF1QixLQUF2QixrQkFBdUIsS0FBdkIsY0FBdUIsS0FBdkIsVUFBdUIsS0RwZ0JqQywwQkFPRyxNQUFPLEtBQ1AsWUFBYyIsImZpbGUiOiJpZTkuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnbGlicy92YXJzJztcbkBpbXBvcnQgJ2xpYnMvZnVuY3Rpb25zJztcbkBpbXBvcnQgJ2xpYnMvbWl4aW5zJztcbkBpbXBvcnQgJ2xpYnMvc2tlbCc7XG5cbi8qXG5cdFBoYW50b20gYnkgSFRNTDUgVVBcblx0aHRtbDV1cC5uZXQgfCBAbjMzY29cblx0RnJlZSBmb3IgcGVyc29uYWwgYW5kIGNvbW1lcmNpYWwgdXNlIHVuZGVyIHRoZSBDQ0EgMy4wIGxpY2Vuc2UgKGh0bWw1dXAubmV0L2xpY2Vuc2UpXG4qL1xuXG4vKiBUaWxlcyAqL1xuXG5cdC50aWxlcyB7XG5cdFx0JjphZnRlciB7XG5cdFx0XHRjb250ZW50OiAnJztcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0Y2xlYXI6IGJvdGg7XG5cdFx0fVxuXG5cdFx0YXJ0aWNsZSB7XG5cdFx0XHRmbG9hdDogbGVmdDtcblxuXHRcdFx0PiBhIHtcblx0XHRcdFx0cGFkZGluZy10b3A6IDUwJTtcblx0XHRcdFx0bWFyZ2luLXRvcDogLTEuNzVlbTtcblx0XHRcdH1cblxuXHRcdFx0Ym9keTpub3QoLmlzLXRvdWNoKSAmIHtcblx0XHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdFx0PiAuaW1hZ2Uge1xuXHRcdFx0XHRcdFx0QGluY2x1ZGUgdmVuZG9yKCd0cmFuc2Zvcm0nLCAnbm9uZScpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG4vKiBGb290ZXIgKi9cblxuXHQjZm9vdGVyIHtcblx0XHQ+IC5pbm5lciB7XG5cdFx0XHRzZWN0aW9uIHtcblx0XHRcdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0XHR9XG5cblx0XHRcdC5jb3B5cmlnaHQge1xuXHRcdFx0XHRjbGVhcjogYm90aDtcblx0XHRcdFx0cGFkZGluZy10b3A6IChfc2l6ZShlbGVtZW50LW1hcmdpbikgKiAyKTtcblx0XHRcdH1cblx0XHR9XG5cdH0iLCIvLyBza2VsLnNjc3MgdjMuMC4wIHwgKGMpIG4zMyB8IHNrZWwuaW8gfCBNSVQgbGljZW5zZWQgKi9cblxuLy8gVmFycy5cblxuXHQvLy8gQnJlYWtwb2ludHMuXG5cdC8vLyBAdmFyIHtsaXN0fVxuXHQkYnJlYWtwb2ludHM6ICgpICFnbG9iYWw7XG5cblx0Ly8vIFZlbmRvciBwcmVmaXhlcy5cblx0Ly8vIEB2YXIge2xpc3R9XG5cdCR2ZW5kb3ItcHJlZml4ZXM6IChcblx0XHQnLW1vei0nLFxuXHRcdCctd2Via2l0LScsXG5cdFx0Jy1tcy0nLFxuXHRcdCcnXG5cdCk7XG5cblx0Ly8vIFByb3BlcnRpZXMgdGhhdCBzaG91bGQgYmUgdmVuZG9yaXplZC5cblx0Ly8vIEB2YXIge2xpc3R9XG5cdCR2ZW5kb3ItcHJvcGVydGllczogKFxuXHRcdCdhbGlnbi1jb250ZW50Jyxcblx0XHQnYWxpZ24taXRlbXMnLFxuXHRcdCdhbGlnbi1zZWxmJyxcblx0XHQnYW5pbWF0aW9uJyxcblx0XHQnYW5pbWF0aW9uLWRlbGF5Jyxcblx0XHQnYW5pbWF0aW9uLWRpcmVjdGlvbicsXG5cdFx0J2FuaW1hdGlvbi1kdXJhdGlvbicsXG5cdFx0J2FuaW1hdGlvbi1maWxsLW1vZGUnLFxuXHRcdCdhbmltYXRpb24taXRlcmF0aW9uLWNvdW50Jyxcblx0XHQnYW5pbWF0aW9uLW5hbWUnLFxuXHRcdCdhbmltYXRpb24tcGxheS1zdGF0ZScsXG5cdFx0J2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24nLFxuXHRcdCdhcHBlYXJhbmNlJyxcblx0XHQnYmFja2ZhY2UtdmlzaWJpbGl0eScsXG5cdFx0J2JveC1zaXppbmcnLFxuXHRcdCdmaWx0ZXInLFxuXHRcdCdmbGV4Jyxcblx0XHQnZmxleC1iYXNpcycsXG5cdFx0J2ZsZXgtZGlyZWN0aW9uJyxcblx0XHQnZmxleC1mbG93Jyxcblx0XHQnZmxleC1ncm93Jyxcblx0XHQnZmxleC1zaHJpbmsnLFxuXHRcdCdmbGV4LXdyYXAnLFxuXHRcdCdqdXN0aWZ5LWNvbnRlbnQnLFxuXHRcdCdvcmRlcicsXG5cdFx0J3BlcnNwZWN0aXZlJyxcblx0XHQncG9pbnRlci1ldmVudHMnLFxuXHRcdCd0cmFuc2Zvcm0nLFxuXHRcdCd0cmFuc2Zvcm0tb3JpZ2luJyxcblx0XHQndHJhbnNmb3JtLXN0eWxlJyxcblx0XHQndHJhbnNpdGlvbicsXG5cdFx0J3RyYW5zaXRpb24tZGVsYXknLFxuXHRcdCd0cmFuc2l0aW9uLWR1cmF0aW9uJyxcblx0XHQndHJhbnNpdGlvbi1wcm9wZXJ0eScsXG5cdFx0J3RyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uJ1xuXHQpO1xuXG5cdC8vLyBWYWx1ZXMgdGhhdCBzaG91bGQgYmUgdmVuZG9yaXplZC5cblx0Ly8vIEB2YXIge2xpc3R9XG5cdCR2ZW5kb3ItdmFsdWVzOiAoXG5cdFx0J2ZpbHRlcicsXG5cdFx0J2ZsZXgnLFxuXHRcdCdsaW5lYXItZ3JhZGllbnQnLFxuXHRcdCdyYWRpYWwtZ3JhZGllbnQnLFxuXHRcdCd0cmFuc2Zvcm0nXG5cdCk7XG5cbi8vIEZ1bmN0aW9ucy5cblxuXHQvLy8gUmVtb3ZlcyBhIHNwZWNpZmljIGl0ZW0gZnJvbSBhIGxpc3QuXG5cdC8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcblx0Ly8vIEBwYXJhbSB7bGlzdH0gJGxpc3QgTGlzdC5cblx0Ly8vIEBwYXJhbSB7aW50ZWdlcn0gJGluZGV4IEluZGV4LlxuXHQvLy8gQHJldHVybiB7bGlzdH0gVXBkYXRlZCBsaXN0LlxuXHRAZnVuY3Rpb24gcmVtb3ZlLW50aCgkbGlzdCwgJGluZGV4KSB7XG5cblx0XHQkcmVzdWx0OiBudWxsO1xuXG5cdFx0QGlmIHR5cGUtb2YoJGluZGV4KSAhPSBudW1iZXIge1xuXHRcdFx0QHdhcm4gXCIkaW5kZXg6ICN7cXVvdGUoJGluZGV4KX0gaXMgbm90IGEgbnVtYmVyIGZvciBgcmVtb3ZlLW50aGAuXCI7XG5cdFx0fVxuXHRcdEBlbHNlIGlmICRpbmRleCA9PSAwIHtcblx0XHRcdEB3YXJuIFwiTGlzdCBpbmRleCAwIG11c3QgYmUgYSBub24temVybyBpbnRlZ2VyIGZvciBgcmVtb3ZlLW50aGAuXCI7XG5cdFx0fVxuXHRcdEBlbHNlIGlmIGFicygkaW5kZXgpID4gbGVuZ3RoKCRsaXN0KSB7XG5cdFx0XHRAd2FybiBcIkxpc3QgaW5kZXggaXMgI3skaW5kZXh9IGJ1dCBsaXN0IGlzIG9ubHkgI3tsZW5ndGgoJGxpc3QpfSBpdGVtIGxvbmcgZm9yIGByZW1vdmUtbnRoYC5cIjtcblx0XHR9XG5cdFx0QGVsc2Uge1xuXG5cdFx0XHQkcmVzdWx0OiAoKTtcblx0XHRcdCRpbmRleDogaWYoJGluZGV4IDwgMCwgbGVuZ3RoKCRsaXN0KSArICRpbmRleCArIDEsICRpbmRleCk7XG5cblx0XHRcdEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRsaXN0KSB7XG5cblx0XHRcdFx0QGlmICRpICE9ICRpbmRleCB7XG5cdFx0XHRcdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIG50aCgkbGlzdCwgJGkpKTtcblx0XHRcdFx0fVxuXG5cdFx0XHR9XG5cblx0XHR9XG5cblx0XHRAcmV0dXJuICRyZXN1bHQ7XG5cblx0fVxuXG5cdC8vLyBSZXBsYWNlcyBhIHN1YnN0cmluZyB3aXRoaW4gYW5vdGhlciBzdHJpbmcuXG5cdC8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcblx0Ly8vIEBwYXJhbSB7c3RyaW5nfSAkc3RyaW5nIFN0cmluZy5cblx0Ly8vIEBwYXJhbSB7c3RyaW5nfSAkc2VhcmNoIFN1YnN0cmluZy5cblx0Ly8vIEBwYXJhbSB7c3RyaW5nfSAkcmVwbGFjZSBSZXBsYWNlbWVudC5cblx0Ly8vIEByZXR1cm4ge3N0cmluZ30gVXBkYXRlZCBzdHJpbmcuXG5cdEBmdW5jdGlvbiBzdHItcmVwbGFjZSgkc3RyaW5nLCAkc2VhcmNoLCAkcmVwbGFjZTogJycpIHtcblxuXHRcdCRpbmRleDogc3RyLWluZGV4KCRzdHJpbmcsICRzZWFyY2gpO1xuXG5cdFx0QGlmICRpbmRleCB7XG5cdFx0XHRAcmV0dXJuIHN0ci1zbGljZSgkc3RyaW5nLCAxLCAkaW5kZXggLSAxKSArICRyZXBsYWNlICsgc3RyLXJlcGxhY2Uoc3RyLXNsaWNlKCRzdHJpbmcsICRpbmRleCArIHN0ci1sZW5ndGgoJHNlYXJjaCkpLCAkc2VhcmNoLCAkcmVwbGFjZSk7XG5cdFx0fVxuXG5cdFx0QHJldHVybiAkc3RyaW5nO1xuXG5cdH1cblxuXHQvLy8gUmVwbGFjZXMgYSBzdWJzdHJpbmcgd2l0aGluIGVhY2ggc3RyaW5nIGluIGEgbGlzdC5cblx0Ly8vIEBwYXJhbSB7bGlzdH0gJHN0cmluZ3MgTGlzdCBvZiBzdHJpbmdzLlxuXHQvLy8gQHBhcmFtIHtzdHJpbmd9ICRzZWFyY2ggU3Vic3RyaW5nLlxuXHQvLy8gQHBhcmFtIHtzdHJpbmd9ICRyZXBsYWNlIFJlcGxhY2VtZW50LlxuXHQvLy8gQHJldHVybiB7bGlzdH0gVXBkYXRlZCBsaXN0IG9mIHN0cmluZ3MuXG5cdEBmdW5jdGlvbiBzdHItcmVwbGFjZS1hbGwoJHN0cmluZ3MsICRzZWFyY2gsICRyZXBsYWNlOiAnJykge1xuXG5cdFx0QGVhY2ggJHN0cmluZyBpbiAkc3RyaW5ncyB7XG5cdFx0XHQkc3RyaW5nczogc2V0LW50aCgkc3RyaW5ncywgaW5kZXgoJHN0cmluZ3MsICRzdHJpbmcpLCBzdHItcmVwbGFjZSgkc3RyaW5nLCAkc2VhcmNoLCAkcmVwbGFjZSkpO1xuXHRcdH1cblxuXHRcdEByZXR1cm4gJHN0cmluZ3M7XG5cblx0fVxuXG5cdC8vLyBHZXRzIGEgdmFsdWUgZnJvbSBhIG1hcC5cblx0Ly8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuXHQvLy8gQHBhcmFtIHttYXB9ICRtYXAgTWFwLlxuXHQvLy8gQHBhcmFtIHtzdHJpbmd9ICRrZXlzIEtleShzKS5cblx0Ly8vIEByZXR1cm4ge3N0cmluZ30gVmFsdWUuXG5cdEBmdW5jdGlvbiB2YWwoJG1hcCwgJGtleXMuLi4pIHtcblxuXHRcdEBpZiBudGgoJGtleXMsIDEpID09IG51bGwge1xuXHRcdFx0JGtleXM6IHJlbW92ZS1udGgoJGtleXMsIDEpO1xuXHRcdH1cblxuXHRcdEBlYWNoICRrZXkgaW4gJGtleXMge1xuXHRcdFx0JG1hcDogbWFwLWdldCgkbWFwLCAka2V5KTtcblx0XHR9XG5cblx0XHRAcmV0dXJuICRtYXA7XG5cblx0fVxuXG4vLyBNaXhpbnMuXG5cblx0Ly8vIFNldHMgdGhlIGdsb2JhbCBib3ggbW9kZWwuXG5cdC8vLyBAcGFyYW0ge3N0cmluZ30gJG1vZGVsIE1vZGVsIChkZWZhdWx0IGlzIGNvbnRlbnQpLlxuXHRAbWl4aW4gYm94TW9kZWwoJG1vZGVsOiAnY29udGVudCcpIHtcblxuXHRcdCR4OiAkbW9kZWwgKyAnLWJveCc7XG5cblx0XHQqLCAqOmJlZm9yZSwgKjphZnRlciB7XG5cdFx0XHQtbW96LWJveC1zaXppbmc6ICN7JHh9O1xuXHRcdFx0LXdlYmtpdC1ib3gtc2l6aW5nOiAjeyR4fTtcblx0XHRcdGJveC1zaXppbmc6ICN7JHh9O1xuXHRcdH1cblxuXHR9XG5cblx0Ly8vIFdyYXBzIEBjb250ZW50IGluIGEgQG1lZGlhIGJsb2NrIHVzaW5nIGEgZ2l2ZW4gYnJlYWtwb2ludC5cblx0Ly8vIEBwYXJhbSB7c3RyaW5nfSAkYnJlYWtwb2ludCBCcmVha3BvaW50LlxuXHQvLy8gQHBhcmFtIHttYXB9ICRxdWVyaWVzIEFkZGl0aW9uYWwgcXVlcmllcy5cblx0QG1peGluIGJyZWFrcG9pbnQoJGJyZWFrcG9pbnQ6IG51bGwsICRxdWVyaWVzOiBudWxsKSB7XG5cblx0XHQkcXVlcnk6ICdzY3JlZW4nO1xuXG5cdFx0Ly8gQnJlYWtwb2ludC5cblx0XHRcdEBpZiAkYnJlYWtwb2ludCBhbmQgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkge1xuXHRcdFx0XHQkcXVlcnk6ICRxdWVyeSArICcgYW5kICcgKyBtYXAtZ2V0KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQpO1xuXHRcdFx0fVxuXG5cdFx0Ly8gUXVlcmllcy5cblx0XHRcdEBpZiAkcXVlcmllcyB7XG5cdFx0XHRcdEBlYWNoICRrLCAkdiBpbiAkcXVlcmllcyB7XG5cdFx0XHRcdFx0JHF1ZXJ5OiAkcXVlcnkgKyAnIGFuZCAoJyArICRrICsgJzonICsgJHYgKyAnKSc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuICAgICAgICBAbWVkaWEgI3skcXVlcnl9IHtcbiAgICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG5cblx0fVxuXG5cdC8vLyBXcmFwcyBAY29udGVudCBpbiBhIEBtZWRpYSBibG9jayB0YXJnZXRpbmcgYSBzcGVjaWZpYyBvcmllbnRhdGlvbi5cblx0Ly8vIEBwYXJhbSB7c3RyaW5nfSAkb3JpZW50YXRpb24gT3JpZW50YXRpb24uXG5cdEBtaXhpbiBvcmllbnRhdGlvbigkb3JpZW50YXRpb24pIHtcblx0XHRAbWVkaWEgc2NyZWVuIGFuZCAob3JpZW50YXRpb246ICN7JG9yaWVudGF0aW9ufSkge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG5cblx0Ly8vIFV0aWxpdHkgbWl4aW4gZm9yIGNvbnRhaW5lcnMuXG5cdC8vLyBAcGFyYW0ge21peGVkfSAkd2lkdGggV2lkdGguXG5cdEBtaXhpbiBjb250YWluZXJzKCR3aWR0aCkge1xuXG5cdFx0Ly8gTG9ja2VkP1xuXHRcdFx0JGxvY2s6IGZhbHNlO1xuXG5cdFx0XHRAaWYgbGVuZ3RoKCR3aWR0aCkgPT0gMiB7XG5cdFx0XHRcdCR3aWR0aDogbnRoKCR3aWR0aCwgMSk7XG5cdFx0XHRcdCRsb2NrOiB0cnVlO1xuXHRcdFx0fVxuXG5cdFx0Ly8gTW9kaWZpZXJzLlxuXHRcdFx0LmNvbnRhaW5lci5cXDMxIDI1XFwyNVx0XHR7IHdpZHRoOiAxMDAlOyBtYXgtd2lkdGg6ICR3aWR0aCAqIDEuMjU7IG1pbi13aWR0aDogJHdpZHRoOyB9XG5cdFx0XHQuY29udGFpbmVyLlxcMzcgNVxcMjVcdFx0XHR7IHdpZHRoOiAkd2lkdGggKiAwLjc1OyB9XG5cdFx0XHQuY29udGFpbmVyLlxcMzUgMFxcMjVcdFx0XHR7IHdpZHRoOiAkd2lkdGggKiAwLjU7IH1cblx0XHRcdC5jb250YWluZXIuXFwzMiA1XFwyNVx0XHRcdHsgd2lkdGg6ICR3aWR0aCAqIDAuMjU7IH1cblxuXHRcdC8vIE1haW4gY2xhc3MuXG5cdFx0XHQuY29udGFpbmVyIHtcblx0XHRcdFx0QGlmICRsb2NrIHtcblx0XHRcdFx0XHR3aWR0aDogJHdpZHRoICFpbXBvcnRhbnQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0QGVsc2Uge1xuXHRcdFx0XHRcdHdpZHRoOiAkd2lkdGg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHR9XG5cblx0Ly8vIFV0aWxpdHkgbWl4aW4gZm9yIGdyaWQuXG5cdC8vLyBAcGFyYW0ge2xpc3R9ICRndXR0ZXJzIENvbHVtbiBhbmQgcm93IGd1dHRlcnMgKGRlZmF1bHQgaXMgNDBweCkuXG5cdC8vLyBAcGFyYW0ge3N0cmluZ30gJGJyZWFrcG9pbnROYW1lIE9wdGlvbmFsIGJyZWFrcG9pbnQgbmFtZS5cblx0QG1peGluIGdyaWQoJGd1dHRlcnM6IDQwcHgsICRicmVha3BvaW50TmFtZTogbnVsbCkge1xuXG5cdFx0Ly8gR3V0dGVycy5cblx0XHRcdEBpbmNsdWRlIGdyaWQtZ3V0dGVycygkZ3V0dGVycyk7XG5cdFx0XHRAaW5jbHVkZSBncmlkLWd1dHRlcnMoJGd1dHRlcnMsIFxcMzIgMDBcXDI1LCAyKTtcblx0XHRcdEBpbmNsdWRlIGdyaWQtZ3V0dGVycygkZ3V0dGVycywgXFwzMSA1MFxcMjUsIDEuNSk7XG5cdFx0XHRAaW5jbHVkZSBncmlkLWd1dHRlcnMoJGd1dHRlcnMsIFxcMzUgMFxcMjUsIDAuNSk7XG5cdFx0XHRAaW5jbHVkZSBncmlkLWd1dHRlcnMoJGd1dHRlcnMsIFxcMzIgNVxcMjUsIDAuMjUpO1xuXG5cdFx0Ly8gQ2VsbHMuXG5cdFx0XHQkeDogJyc7XG5cblx0XHRcdEBpZiAkYnJlYWtwb2ludE5hbWUge1xuXHRcdFx0XHQkeDogJ1xcXFwyOCcgKyAkYnJlYWtwb2ludE5hbWUgKyAnXFxcXDI5Jztcblx0XHRcdH1cblxuXHRcdFx0LlxcMzEgMnUjeyR4fSwgLlxcMzEgMnVcXDI0I3skeH0geyB3aWR0aDogMTAwJTsgY2xlYXI6IG5vbmU7IG1hcmdpbi1sZWZ0OiAwOyB9XG5cdFx0XHQuXFwzMSAxdSN7JHh9LCAuXFwzMSAxdVxcMjQjeyR4fSB7IHdpZHRoOiA5MS42NjY2NjY2NjY3JTsgY2xlYXI6IG5vbmU7IG1hcmdpbi1sZWZ0OiAwOyB9XG5cdFx0XHQuXFwzMSAwdSN7JHh9LCAuXFwzMSAwdVxcMjQjeyR4fSB7IHdpZHRoOiA4My4zMzMzMzMzMzMzJTsgY2xlYXI6IG5vbmU7IG1hcmdpbi1sZWZ0OiAwOyB9XG5cdFx0XHQuXFwzOSB1I3skeH0sIC5cXDM5IHVcXDI0I3skeH0geyB3aWR0aDogNzUlOyBjbGVhcjogbm9uZTsgbWFyZ2luLWxlZnQ6IDA7IH1cblx0XHRcdC5cXDM4IHUjeyR4fSwgLlxcMzggdVxcMjQjeyR4fSB7IHdpZHRoOiA2Ni42NjY2NjY2NjY3JTsgY2xlYXI6IG5vbmU7IG1hcmdpbi1sZWZ0OiAwOyB9XG5cdFx0XHQuXFwzNyB1I3skeH0sIC5cXDM3IHVcXDI0I3skeH0geyB3aWR0aDogNTguMzMzMzMzMzMzMyU7IGNsZWFyOiBub25lOyBtYXJnaW4tbGVmdDogMDsgfVxuXHRcdFx0LlxcMzYgdSN7JHh9LCAuXFwzNiB1XFwyNCN7JHh9IHsgd2lkdGg6IDUwJTsgY2xlYXI6IG5vbmU7IG1hcmdpbi1sZWZ0OiAwOyB9XG5cdFx0XHQuXFwzNSB1I3skeH0sIC5cXDM1IHVcXDI0I3skeH0geyB3aWR0aDogNDEuNjY2NjY2NjY2NyU7IGNsZWFyOiBub25lOyBtYXJnaW4tbGVmdDogMDsgfVxuXHRcdFx0LlxcMzQgdSN7JHh9LCAuXFwzNCB1XFwyNCN7JHh9IHsgd2lkdGg6IDMzLjMzMzMzMzMzMzMlOyBjbGVhcjogbm9uZTsgbWFyZ2luLWxlZnQ6IDA7IH1cblx0XHRcdC5cXDMzIHUjeyR4fSwgLlxcMzMgdVxcMjQjeyR4fSB7IHdpZHRoOiAyNSU7IGNsZWFyOiBub25lOyBtYXJnaW4tbGVmdDogMDsgfVxuXHRcdFx0LlxcMzIgdSN7JHh9LCAuXFwzMiB1XFwyNCN7JHh9IHsgd2lkdGg6IDE2LjY2NjY2NjY2NjclOyBjbGVhcjogbm9uZTsgbWFyZ2luLWxlZnQ6IDA7IH1cblx0XHRcdC5cXDMxIHUjeyR4fSwgLlxcMzEgdVxcMjQjeyR4fSB7IHdpZHRoOiA4LjMzMzMzMzMzMzMlOyBjbGVhcjogbm9uZTsgbWFyZ2luLWxlZnQ6IDA7IH1cblxuXHRcdFx0LlxcMzEgMnVcXDI0I3skeH0gKyAqLFxuXHRcdFx0LlxcMzEgMXVcXDI0I3skeH0gKyAqLFxuXHRcdFx0LlxcMzEgMHVcXDI0I3skeH0gKyAqLFxuXHRcdFx0LlxcMzkgdVxcMjQjeyR4fSArICosXG5cdFx0XHQuXFwzOCB1XFwyNCN7JHh9ICsgKixcblx0XHRcdC5cXDM3IHVcXDI0I3skeH0gKyAqLFxuXHRcdFx0LlxcMzYgdVxcMjQjeyR4fSArICosXG5cdFx0XHQuXFwzNSB1XFwyNCN7JHh9ICsgKixcblx0XHRcdC5cXDM0IHVcXDI0I3skeH0gKyAqLFxuXHRcdFx0LlxcMzMgdVxcMjQjeyR4fSArICosXG5cdFx0XHQuXFwzMiB1XFwyNCN7JHh9ICsgKixcblx0XHRcdC5cXDMxIHVcXDI0I3skeH0gKyAqIHtcblx0XHRcdFx0Y2xlYXI6IGxlZnQ7XG5cdFx0XHR9XG5cblx0XHRcdC5cXC0xMXUjeyR4fSB7IG1hcmdpbi1sZWZ0OiA5MS42NjY2NjY2NjY3JSB9XG5cdFx0XHQuXFwtMTB1I3skeH0geyBtYXJnaW4tbGVmdDogODMuMzMzMzMzMzMzMyUgfVxuXHRcdFx0LlxcLTl1I3skeH0geyBtYXJnaW4tbGVmdDogNzUlIH1cblx0XHRcdC5cXC04dSN7JHh9IHsgbWFyZ2luLWxlZnQ6IDY2LjY2NjY2NjY2NjclIH1cblx0XHRcdC5cXC03dSN7JHh9IHsgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzMzMzMzMlIH1cblx0XHRcdC5cXC02dSN7JHh9IHsgbWFyZ2luLWxlZnQ6IDUwJSB9XG5cdFx0XHQuXFwtNXUjeyR4fSB7IG1hcmdpbi1sZWZ0OiA0MS42NjY2NjY2NjY3JSB9XG5cdFx0XHQuXFwtNHUjeyR4fSB7IG1hcmdpbi1sZWZ0OiAzMy4zMzMzMzMzMzMzJSB9XG5cdFx0XHQuXFwtM3UjeyR4fSB7IG1hcmdpbi1sZWZ0OiAyNSUgfVxuXHRcdFx0LlxcLTJ1I3skeH0geyBtYXJnaW4tbGVmdDogMTYuNjY2NjY2NjY2NyUgfVxuXHRcdFx0LlxcLTF1I3skeH0geyBtYXJnaW4tbGVmdDogOC4zMzMzMzMzMzMzJSB9XG5cblx0fVxuXG5cdC8vLyBVdGlsaXR5IG1peGluIGZvciBncmlkLlxuXHQvLy8gQHBhcmFtIHtsaXN0fSAkZ3V0dGVycyBHdXR0ZXJzLlxuXHQvLy8gQHBhcmFtIHtzdHJpbmd9ICRjbGFzcyBPcHRpb25hbCBjbGFzcyBuYW1lLlxuXHQvLy8gQHBhcmFtIHtpbnRlZ2VyfSAkbXVsdGlwbGllciBNdWx0aXBsaWVyIChkZWZhdWx0IGlzIDEpLlxuXHRAbWl4aW4gZ3JpZC1ndXR0ZXJzKCRndXR0ZXJzLCAkY2xhc3M6IG51bGwsICRtdWx0aXBsaWVyOiAxKSB7XG5cblx0XHQvLyBFeHBhbmQgZ3V0dGVycyBpZiBpdCdzIG5vdCBhIGxpc3QuXG5cdFx0XHRAaWYgbGVuZ3RoKCRndXR0ZXJzKSA9PSAxIHtcblx0XHRcdFx0JGd1dHRlcnM6ICgkZ3V0dGVycywgMCk7XG5cdFx0XHR9XG5cblx0XHQvLyBHZXQgY29sdW1uIGFuZCByb3cgZ3V0dGVyIHZhbHVlcy5cblx0XHRcdCRjOiBudGgoJGd1dHRlcnMsIDEpO1xuXHRcdFx0JHI6IG50aCgkZ3V0dGVycywgMik7XG5cblx0XHQvLyBHZXQgY2xhc3MgKGlmIHByb3ZpZGVkKS5cblx0XHRcdCR4OiAnJztcblxuXHRcdFx0QGlmICRjbGFzcyB7XG5cdFx0XHRcdCR4OiAnLicgKyAkY2xhc3M7XG5cdFx0XHR9XG5cblx0XHQvLyBEZWZhdWx0LlxuXHRcdFx0LnJvdyN7JHh9ID4gKiB7IHBhZGRpbmc6ICgkciAqICRtdWx0aXBsaWVyKSAwIDAgKCRjICogJG11bHRpcGxpZXIpOyB9XG5cdFx0XHQucm93I3skeH0geyBtYXJnaW46ICgkciAqICRtdWx0aXBsaWVyICogLTEpIDAgLTFweCAoJGMgKiAkbXVsdGlwbGllciAqIC0xKTsgfVxuXG5cdFx0Ly8gVW5pZm9ybS5cblx0XHRcdC5yb3cudW5pZm9ybSN7JHh9ID4gKiB7IHBhZGRpbmc6ICgkYyAqICRtdWx0aXBsaWVyKSAwIDAgKCRjICogJG11bHRpcGxpZXIpOyB9XG5cdFx0XHQucm93LnVuaWZvcm0jeyR4fSB7IG1hcmdpbjogKCRjICogJG11bHRpcGxpZXIgKiAtMSkgMCAtMXB4ICgkYyAqICRtdWx0aXBsaWVyICogLTEpOyB9XG5cblx0fVxuXG5cdC8vLyBXcmFwcyBAY29udGVudCBpbiB2ZW5kb3JpemVkIGtleWZyYW1lIGJsb2Nrcy5cblx0Ly8vIEBwYXJhbSB7c3RyaW5nfSAkbmFtZSBOYW1lLlxuXHRAbWl4aW4ga2V5ZnJhbWVzKCRuYW1lKSB7XG5cblx0XHRALW1vei1rZXlmcmFtZXMgI3skbmFtZX0geyBAY29udGVudDsgfVxuXHRcdEAtd2Via2l0LWtleWZyYW1lcyAjeyRuYW1lfSB7IEBjb250ZW50OyB9XG5cdFx0QC1tcy1rZXlmcmFtZXMgI3skbmFtZX0geyBAY29udGVudDsgfVxuXHRcdEBrZXlmcmFtZXMgI3skbmFtZX0geyBAY29udGVudDsgfVxuXG5cdH1cblxuXHQvLy9cblx0Ly8vIFNldHMgYnJlYWtwb2ludHMuXG5cdC8vLyBAcGFyYW0ge21hcH0gJHggQnJlYWtwb2ludHMuXG5cdC8vL1xuXHRAbWl4aW4gc2tlbC1icmVha3BvaW50cygkeDogKCkpIHtcblx0XHQkYnJlYWtwb2ludHM6ICR4ICFnbG9iYWw7XG5cdH1cblxuXHQvLy9cblx0Ly8vIEluaXRpYWxpemVzIGxheW91dCBtb2R1bGUuXG5cdC8vLyBAcGFyYW0ge21hcH0gY29uZmlnIENvbmZpZy5cblx0Ly8vXG5cdEBtaXhpbiBza2VsLWxheW91dCgkY29uZmlnOiAoKSkge1xuXG5cdFx0Ly8gQ29uZmlnLlxuXHRcdFx0JGNvbmZpZ1BlckJyZWFrcG9pbnQ6ICgpO1xuXG5cdFx0XHQkejogbWFwLWdldCgkY29uZmlnLCAnYnJlYWtwb2ludHMnKTtcblxuXHRcdFx0QGlmICR6IHtcblx0XHRcdFx0JGNvbmZpZ1BlckJyZWFrcG9pbnQ6ICR6O1xuXHRcdFx0fVxuXG5cdFx0Ly8gUmVzZXQuXG5cdFx0XHQkeDogbWFwLWdldCgkY29uZmlnLCAncmVzZXQnKTtcblxuXHRcdFx0QGlmICR4IHtcblxuXHRcdFx0XHQvKiBSZXNldCAqL1xuXG5cdFx0XHRcdEBpbmNsdWRlIHJlc2V0KCR4KTtcblxuXHRcdFx0fVxuXG5cdFx0Ly8gQm94IG1vZGVsLlxuXHRcdFx0JHg6IG1hcC1nZXQoJGNvbmZpZywgJ2JveE1vZGVsJyk7XG5cblx0XHRcdEBpZiAkeCB7XG5cblx0XHRcdFx0LyogQm94IE1vZGVsICovXG5cblx0XHRcdFx0QGluY2x1ZGUgYm94TW9kZWwoJHgpO1xuXG5cdFx0XHR9XG5cblx0XHQvLyBDb250YWluZXJzLlxuXHRcdFx0JGNvbnRhaW5lcnM6IG1hcC1nZXQoJGNvbmZpZywgJ2NvbnRhaW5lcnMnKTtcblxuXHRcdFx0QGlmICRjb250YWluZXJzIHtcblxuXHRcdFx0XHQvKiBDb250YWluZXJzICovXG5cblx0XHRcdFx0LmNvbnRhaW5lciB7XG5cdFx0XHRcdFx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdFx0XHRcdFx0bWFyZ2luLXJpZ2h0OiBhdXRvO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVXNlIGRlZmF1bHQgaXMgJGNvbnRhaW5lcnMgaXMganVzdCBcInRydWVcIi5cblx0XHRcdFx0XHRAaWYgJGNvbnRhaW5lcnMgPT0gdHJ1ZSB7XG5cdFx0XHRcdFx0XHQkY29udGFpbmVyczogOTYwcHg7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFwcGx5IGJhc2UuXG5cdFx0XHRcdFx0QGluY2x1ZGUgY29udGFpbmVycygkY29udGFpbmVycyk7XG5cblx0XHRcdFx0Ly8gQXBwbHkgcGVyLWJyZWFrcG9pbnQuXG5cdFx0XHRcdFx0QGVhY2ggJG5hbWUgaW4gbWFwLWtleXMoJGJyZWFrcG9pbnRzKSB7XG5cblx0XHRcdFx0XHRcdC8vIEdldC91c2UgYnJlYWtwb2ludCBzZXR0aW5nIGlmIGl0IGV4aXN0cy5cblx0XHRcdFx0XHRcdFx0JHg6IG1hcC1nZXQoJGNvbmZpZ1BlckJyZWFrcG9pbnQsICRuYW1lKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBQZXItYnJlYWtwb2ludCBjb25maWcgZXhpc3RzP1xuXHRcdFx0XHRcdFx0XHRcdEBpZiAkeCB7XG5cdFx0XHRcdFx0XHRcdFx0XHQkeTogbWFwLWdldCgkeCwgJ2NvbnRhaW5lcnMnKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU2V0dGluZyBleGlzdHM/IFVzZSBpdC5cblx0XHRcdFx0XHRcdFx0XHRcdFx0QGlmICR5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQkY29udGFpbmVyczogJHk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gQ3JlYXRlIEBtZWRpYSBibG9jay5cblx0XHRcdFx0XHRcdFx0QG1lZGlhIHNjcmVlbiBhbmQgI3ttYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpfSB7XG5cdFx0XHRcdFx0XHRcdFx0QGluY2x1ZGUgY29udGFpbmVycygkY29udGFpbmVycyk7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdH1cblxuXHRcdFx0fVxuXG5cdFx0Ly8gR3JpZC5cblx0XHRcdCRncmlkOiBtYXAtZ2V0KCRjb25maWcsICdncmlkJyk7XG5cblx0XHRcdEBpZiAkZ3JpZCB7XG5cblx0XHRcdFx0LyogR3JpZCAqL1xuXG5cdFx0XHRcdC8vIFVzZSBkZWZhdWx0cyBpZiAkZ3JpZCBpcyBqdXN0IFwidHJ1ZVwiLlxuXHRcdFx0XHRcdEBpZiAkZ3JpZCA9PSB0cnVlIHtcblx0XHRcdFx0XHRcdCRncmlkOiAoKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3ViLXNldHRpbmc6IEd1dHRlcnMuXG5cdFx0XHRcdFx0JGdyaWQtZ3V0dGVyczogNDBweDtcblx0XHRcdFx0XHQkeDogbWFwLWdldCgkZ3JpZCwgJ2d1dHRlcnMnKTtcblxuXHRcdFx0XHRcdEBpZiAkeCB7XG5cdFx0XHRcdFx0XHQkZ3JpZC1ndXR0ZXJzOiAkeDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUm93cy5cblx0XHRcdFx0XHQucm93IHtcblx0XHRcdFx0XHRcdGJvcmRlci1ib3R0b206IHNvbGlkIDFweCB0cmFuc3BhcmVudDtcblx0XHRcdFx0XHRcdC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRcdFx0XHRcdC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRcdFx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LnJvdyA+ICoge1xuXHRcdFx0XHRcdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0XHRcdFx0XHQtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0XHRcdFx0XHQtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0XHRcdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC5yb3c6YWZ0ZXIsIC5yb3c6YmVmb3JlIHtcblx0XHRcdFx0XHRcdGNvbnRlbnQ6ICcnO1xuXHRcdFx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRcdFx0XHRjbGVhcjogYm90aDtcblx0XHRcdFx0XHRcdGhlaWdodDogMDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQucm93LnVuaWZvcm0gPiAqID4gOmZpcnN0LWNoaWxkIHtcblx0XHRcdFx0XHRcdG1hcmdpbi10b3A6IDA7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LnJvdy51bmlmb3JtID4gKiA+IDpsYXN0LWNoaWxkIHtcblx0XHRcdFx0XHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEd1dHRlcnMgKDAlKS5cblx0XHRcdFx0XHRAaW5jbHVkZSBncmlkLWd1dHRlcnMoJGdyaWQtZ3V0dGVycywgXFwzMCBcXDI1LCAwKTtcblxuXHRcdFx0XHQvLyBBcHBseSBiYXNlLlxuXHRcdFx0XHRcdEBpbmNsdWRlIGdyaWQoJGdyaWQtZ3V0dGVycyk7XG5cblx0XHRcdFx0Ly8gQXBwbHkgcGVyLWJyZWFrcG9pbnQuXG5cdFx0XHRcdFx0QGVhY2ggJG5hbWUgaW4gbWFwLWtleXMoJGJyZWFrcG9pbnRzKSB7XG5cblx0XHRcdFx0XHRcdC8vIEdldC91c2UgYnJlYWtwb2ludCBzZXR0aW5nIGlmIGl0IGV4aXN0cy5cblx0XHRcdFx0XHRcdFx0JHg6IG1hcC1nZXQoJGNvbmZpZ1BlckJyZWFrcG9pbnQsICRuYW1lKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBQZXItYnJlYWtwb2ludCBjb25maWcgZXhpc3RzP1xuXHRcdFx0XHRcdFx0XHRcdEBpZiAkeCB7XG5cdFx0XHRcdFx0XHRcdFx0XHQkeTogbWFwLWdldCgkeCwgJ2dyaWQnKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU2V0dGluZyBleGlzdHM/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdEBpZiAkeSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdWItc2V0dGluZzogR3V0dGVycy5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCR4OiBtYXAtZ2V0KCR5LCAnZ3V0dGVycycpO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRAaWYgJHgge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQkZ3JpZC1ndXR0ZXJzOiAkeDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIENyZWF0ZSBAbWVkaWEgYmxvY2suXG5cdFx0XHRcdFx0XHRcdEBtZWRpYSBzY3JlZW4gYW5kICN7bWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKX0ge1xuXHRcdFx0XHRcdFx0XHRcdEBpbmNsdWRlIGdyaWQoJGdyaWQtZ3V0dGVycywgJG5hbWUpO1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR9XG5cblx0XHRcdH1cblxuXHR9XG5cblx0Ly8vIFJlc2V0cyBicm93c2VyIHN0eWxlcy5cblx0Ly8vIEBwYXJhbSB7c3RyaW5nfSAkbW9kZSBNb2RlIChkZWZhdWx0IGlzICdub3JtYWxpemUnKS5cblx0QG1peGluIHJlc2V0KCRtb2RlOiAnbm9ybWFsaXplJykge1xuXG5cdFx0QGlmICRtb2RlID09ICdub3JtYWxpemUnIHtcblxuXHRcdFx0Ly8gbm9ybWFsaXplLmNzcyB2My4wLjIgfCBNSVQgTGljZW5zZSB8IGdpdC5pby9ub3JtYWxpemVcblx0XHRcdFx0aHRtbHtmb250LWZhbWlseTpzYW5zLXNlcmlmOy1tcy10ZXh0LXNpemUtYWRqdXN0OjEwMCU7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCV9Ym9keXttYXJnaW46MH1hcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWFpbixtZW51LG5hdixzZWN0aW9uLHN1bW1hcnl7ZGlzcGxheTpibG9ja31hdWRpbyxjYW52YXMscHJvZ3Jlc3MsdmlkZW97ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9YXVkaW86bm90KFtjb250cm9sc10pe2Rpc3BsYXk6bm9uZTtoZWlnaHQ6MH1baGlkZGVuXSx0ZW1wbGF0ZXtkaXNwbGF5Om5vbmV9YXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fWE6YWN0aXZlLGE6aG92ZXJ7b3V0bGluZTowfWFiYnJbdGl0bGVde2JvcmRlci1ib3R0b206MXB4IGRvdHRlZH1iLHN0cm9uZ3tmb250LXdlaWdodDo3MDB9ZGZue2ZvbnQtc3R5bGU6aXRhbGljfWgxe2ZvbnQtc2l6ZToyZW07bWFyZ2luOi42N2VtIDB9bWFya3tiYWNrZ3JvdW5kOiNmZjA7Y29sb3I6IzAwMH1zbWFsbHtmb250LXNpemU6ODAlfXN1YixzdXB7Zm9udC1zaXplOjc1JTtsaW5lLWhlaWdodDowO3Bvc2l0aW9uOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfXN1cHt0b3A6LS41ZW19c3Vie2JvdHRvbTotLjI1ZW19aW1ne2JvcmRlcjowfXN2Zzpub3QoOnJvb3Qpe292ZXJmbG93OmhpZGRlbn1maWd1cmV7bWFyZ2luOjFlbSA0MHB4fWhyey1tb3otYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94O2hlaWdodDowfXByZXtvdmVyZmxvdzphdXRvfWNvZGUsa2JkLHByZSxzYW1we2ZvbnQtZmFtaWx5Om1vbm9zcGFjZSxtb25vc3BhY2U7Zm9udC1zaXplOjFlbX1idXR0b24saW5wdXQsb3B0Z3JvdXAsc2VsZWN0LHRleHRhcmVhe2NvbG9yOmluaGVyaXQ7Zm9udDppbmhlcml0O21hcmdpbjowfWJ1dHRvbntvdmVyZmxvdzp2aXNpYmxlfWJ1dHRvbixzZWxlY3R7dGV4dC10cmFuc2Zvcm06bm9uZX1idXR0b24saHRtbCBpbnB1dFt0eXBlPWJ1dHRvbl0saW5wdXRbdHlwZT1yZXNldF0saW5wdXRbdHlwZT1zdWJtaXRdey13ZWJraXQtYXBwZWFyYW5jZTpidXR0b247Y3Vyc29yOnBvaW50ZXJ9YnV0dG9uW2Rpc2FibGVkXSxodG1sIGlucHV0W2Rpc2FibGVkXXtjdXJzb3I6ZGVmYXVsdH1idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXJ7Ym9yZGVyOjA7cGFkZGluZzowfWlucHV0e2xpbmUtaGVpZ2h0Om5vcm1hbH1pbnB1dFt0eXBlPWNoZWNrYm94XSxpbnB1dFt0eXBlPXJhZGlvXXtib3gtc2l6aW5nOmJvcmRlci1ib3g7cGFkZGluZzowfWlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixpbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b257aGVpZ2h0OmF1dG99aW5wdXRbdHlwZT1zZWFyY2hdey13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7LW1vei1ib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy13ZWJraXQtYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94fWlucHV0W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixpbnB1dFt0eXBlPXNlYXJjaF06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9ZmllbGRzZXR7Ym9yZGVyOjFweCBzb2xpZCBzaWx2ZXI7bWFyZ2luOjAgMnB4O3BhZGRpbmc6LjM1ZW0gLjYyNWVtIC43NWVtfWxlZ2VuZHtib3JkZXI6MDtwYWRkaW5nOjB9dGV4dGFyZWF7b3ZlcmZsb3c6YXV0b31vcHRncm91cHtmb250LXdlaWdodDo3MDB9dGFibGV7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjB9dGQsdGh7cGFkZGluZzowfVxuXG5cdFx0fVxuXHRcdEBlbHNlIGlmICRtb2RlID09ICdmdWxsJyB7XG5cblx0XHRcdC8vIG1leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldCB2Mi4wIHwgMjAxMTAxMjYgfCBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuXHRcdFx0XHRodG1sLGJvZHksZGl2LHNwYW4sYXBwbGV0LG9iamVjdCxpZnJhbWUsaDEsaDIsaDMsaDQsaDUsaDYscCxibG9ja3F1b3RlLHByZSxhLGFiYnIsYWNyb255bSxhZGRyZXNzLGJpZyxjaXRlLGNvZGUsZGVsLGRmbixlbSxpbWcsaW5zLGtiZCxxLHMsc2FtcCxzbWFsbCxzdHJpa2Usc3Ryb25nLHN1YixzdXAsdHQsdmFyLGIsdSxpLGNlbnRlcixkbCxkdCxkZCxvbCx1bCxsaSxmaWVsZHNldCxmb3JtLGxhYmVsLGxlZ2VuZCx0YWJsZSxjYXB0aW9uLHRib2R5LHRmb290LHRoZWFkLHRyLHRoLHRkLGFydGljbGUsYXNpZGUsY2FudmFzLGRldGFpbHMsZW1iZWQsZmlndXJlLGZpZ2NhcHRpb24sZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWVudSxuYXYsb3V0cHV0LHJ1Ynksc2VjdGlvbixzdW1tYXJ5LHRpbWUsbWFyayxhdWRpbyx2aWRlb3ttYXJnaW46MDtwYWRkaW5nOjA7Ym9yZGVyOjA7Zm9udC1zaXplOjEwMCU7Zm9udDppbmhlcml0O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lO31hcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWVudSxuYXYsc2VjdGlvbntkaXNwbGF5OmJsb2NrO31ib2R5e2xpbmUtaGVpZ2h0OjE7fW9sLHVse2xpc3Qtc3R5bGU6bm9uZTt9YmxvY2txdW90ZSxxe3F1b3Rlczpub25lO31ibG9ja3F1b3RlOmJlZm9yZSxibG9ja3F1b3RlOmFmdGVyLHE6YmVmb3JlLHE6YWZ0ZXJ7Y29udGVudDonJztjb250ZW50Om5vbmU7fXRhYmxle2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTtib3JkZXItc3BhY2luZzowO31ib2R5ey13ZWJraXQtdGV4dC1zaXplLWFkanVzdDpub25lfVxuXG5cdFx0fVxuXG5cdH1cblxuXHQvLy8gVmVuZG9yaXplcyBhIGRlY2xhcmF0aW9uJ3MgcHJvcGVydHkgYW5kL29yIHZhbHVlKHMpLlxuXHQvLy8gQHBhcmFtIHtzdHJpbmd9ICRwcm9wZXJ0eSBQcm9wZXJ0eS5cblx0Ly8vIEBwYXJhbSB7bWl4ZWR9ICR2YWx1ZSBTdHJpbmcvbGlzdCBvZiB2YWx1ZShzKS5cblx0QG1peGluIHZlbmRvcigkcHJvcGVydHksICR2YWx1ZSkge1xuXG5cdFx0Ly8gRGV0ZXJtaW5lIGlmIHByb3BlcnR5IHNob3VsZCBleHBhbmQuXG5cdFx0XHQkZXhwYW5kUHJvcGVydHk6IGluZGV4KCR2ZW5kb3ItcHJvcGVydGllcywgJHByb3BlcnR5KTtcblxuXHRcdC8vIERldGVybWluZSBpZiB2YWx1ZSBzaG91bGQgZXhwYW5kIChhbmQgaWYgc28sIGFkZCAnLXByZWZpeC0nIHBsYWNlaG9sZGVyKS5cblx0XHRcdCRleHBhbmRWYWx1ZTogZmFsc2U7XG5cblx0XHRcdEBlYWNoICR4IGluICR2YWx1ZSB7XG5cdFx0XHRcdEBlYWNoICR5IGluICR2ZW5kb3ItdmFsdWVzIHtcblx0XHRcdFx0XHRAaWYgJHkgPT0gc3RyLXNsaWNlKCR4LCAxLCBzdHItbGVuZ3RoKCR5KSkge1xuXG5cdFx0XHRcdFx0XHQkdmFsdWU6IHNldC1udGgoJHZhbHVlLCBpbmRleCgkdmFsdWUsICR4KSwgJy1wcmVmaXgtJyArICR4KTtcblx0XHRcdFx0XHRcdCRleHBhbmRWYWx1ZTogdHJ1ZTtcblxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gRXhwYW5kIHByb3BlcnR5P1xuXHRcdFx0QGlmICRleHBhbmRQcm9wZXJ0eSB7XG5cdFx0XHQgICAgQGVhY2ggJHZlbmRvciBpbiAkdmVuZG9yLXByZWZpeGVzIHtcblx0XHRcdCAgICAgICAgI3skdmVuZG9yfSN7JHByb3BlcnR5fTogI3tzdHItcmVwbGFjZS1hbGwoJHZhbHVlLCAnLXByZWZpeC0nLCAkdmVuZG9yKX07XG5cdFx0XHQgICAgfVxuXHRcdFx0fVxuXG5cdFx0Ly8gRXhwYW5kIGp1c3QgdGhlIHZhbHVlP1xuXHRcdFx0QGVsc2VpZiAkZXhwYW5kVmFsdWUge1xuXHRcdFx0ICAgIEBlYWNoICR2ZW5kb3IgaW4gJHZlbmRvci1wcmVmaXhlcyB7XG5cdFx0XHQgICAgICAgICN7JHByb3BlcnR5fTogI3tzdHItcmVwbGFjZS1hbGwoJHZhbHVlLCAnLXByZWZpeC0nLCAkdmVuZG9yKX07XG5cdFx0XHQgICAgfVxuXHRcdFx0fVxuXG5cdFx0Ly8gTmVpdGhlcj8gVHJlYXQgdGhlbSBhcyBhIG5vcm1hbCBkZWNsYXJhdGlvbi5cblx0XHRcdEBlbHNlIHtcblx0XHQgICAgICAgICN7JHByb3BlcnR5fTogI3skdmFsdWV9O1xuXHRcdFx0fVxuXG5cdH0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
